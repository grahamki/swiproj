{"ast":null,"code":"var _jsxFileName = \"/Users/gk/webcafeland/frontend/src/components/MorphemeHighlighter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './MorphemeHighlighter.css';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MorphemeHighlighter = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedWord, setSelectedWord] = useState('');\n  const [popupPosition, setPopupPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showPopup, setShowPopup] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(true);\n  const textAreaRef = useRef(null);\n  const handleTextChange = e => {\n    setText(e.target.value);\n    setAnalysis(null);\n    setError(null);\n  };\n  const handleWordClick = async (word, event) => {\n    if (!word || word.trim() === '') return;\n    const rect = event.target.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.bottom + 10\n    });\n    setSelectedWord(word);\n    setShowPopup(true);\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await apiService.analyzeMorpheme(word);\n      setAnalysis(result);\n    } catch (err) {\n      console.error('Failed to analyze word:', err);\n      setError('Failed to analyze word. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClickOutside = event => {\n    if (textAreaRef.current && !textAreaRef.current.contains(event.target)) {\n      setShowPopup(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const renderTextWithClickableWords = () => {\n    if (!text) return null;\n    const words = text.split(/(\\s+)/);\n    return words.map((word, index) => {\n      if (word.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickable-word\",\n        onClick: e => handleWordClick(word, e),\n        title: `Click to analyze: ${word}`,\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCDA Morpheme Highlighter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Highlight any word or section to break it down or summarize.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text-input\",\n          className: \"input-label\",\n          children: \"Paste or type your text here:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-display\",\n          ref: textAreaRef,\n          children: !isEditMode && text ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"clickable-text\",\n            children: renderTextWithClickableWords()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text-input\",\n            className: \"text-input\",\n            placeholder: \"Paste or type your text here... Try highlighting a word to see its morphemes, or highlight a section for a summary.\",\n            value: text,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: \"\\uD83D\\uDCA1 Highlight a word to see its morphemes \\u2014 or highlight a section to get a summary.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: text && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mode-button\",\n              onClick: () => setIsEditMode(!isEditMode),\n              children: isEditMode ? '📖 View Clickable Text' : '✏️ Edit Text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-button\",\n              onClick: () => {\n                setText('');\n                setAnalysis(null);\n                setError(null);\n                setShowPopup(false);\n                setIsEditMode(true);\n              },\n              children: \"Clear Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-popup\",\n        style: {\n          left: `${popupPosition.x}px`,\n          top: `${popupPosition.y}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Analysis: \\\"\", selectedWord, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setShowPopup(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analyzing word structure...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), analysis && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"morpheme-breakdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCDA Morpheme Breakdown:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"morphemes\",\n              children: [analysis.prefix && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"morpheme prefix\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"part\",\n                  children: analysis.prefix.part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meaning\",\n                  children: analysis.prefix.meaning\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this), analysis.root && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"morpheme root\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"part\",\n                  children: analysis.root.part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meaning\",\n                  children: analysis.root.meaning\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this), analysis.suffix1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"morpheme suffix\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"part\",\n                  children: analysis.suffix1.part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meaning\",\n                  children: analysis.suffix1.meaning\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), analysis.suffix2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"morpheme suffix\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"part\",\n                  children: analysis.suffix2.part\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"meaning\",\n                  children: analysis.suffix2.meaning\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), analysis.example && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCA1 Example Usage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\\"\", analysis.example, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), analysis.related && analysis.related.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-words\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDD17 Related Words:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-list\",\n              children: analysis.related.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"related-word\",\n                children: word\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MorphemeHighlighter, \"1CNwgg5lAmCU3FHpJp4SZ1P9V4Q=\");\n_c = MorphemeHighlighter;\nexport default MorphemeHighlighter;\nvar _c;\n$RefreshReg$(_c, \"MorphemeHighlighter\");","map":{"version":3,"names":["React","useState","useRef","useEffect","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","MorphemeHighlighter","_s","text","setText","analysis","setAnalysis","loading","setLoading","error","setError","selectedWord","setSelectedWord","popupPosition","setPopupPosition","x","y","showPopup","setShowPopup","isEditMode","setIsEditMode","textAreaRef","handleTextChange","e","target","value","handleWordClick","word","event","trim","rect","getBoundingClientRect","left","width","bottom","result","analyzeMorpheme","err","console","handleClickOutside","current","contains","document","addEventListener","removeEventListener","renderTextWithClickableWords","words","split","map","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","title","htmlFor","ref","id","placeholder","onChange","style","top","prefix","part","meaning","root","suffix1","suffix2","example","related","length","_c","$RefreshReg$"],"sources":["/Users/gk/webcafeland/frontend/src/components/MorphemeHighlighter.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './MorphemeHighlighter.css';\nimport apiService from '../services/api';\n\nconst MorphemeHighlighter = () => {\n  const [text, setText] = useState('');\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedWord, setSelectedWord] = useState('');\n  const [popupPosition, setPopupPosition] = useState({ x: 0, y: 0 });\n  const [showPopup, setShowPopup] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(true);\n  const textAreaRef = useRef(null);\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n    setAnalysis(null);\n    setError(null);\n  };\n\n  const handleWordClick = async (word, event) => {\n    if (!word || word.trim() === '') return;\n    \n    const rect = event.target.getBoundingClientRect();\n    setPopupPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.bottom + 10\n    });\n    \n    setSelectedWord(word);\n    setShowPopup(true);\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await apiService.analyzeMorpheme(word);\n      setAnalysis(result);\n    } catch (err) {\n      console.error('Failed to analyze word:', err);\n      setError('Failed to analyze word. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClickOutside = (event) => {\n    if (textAreaRef.current && !textAreaRef.current.contains(event.target)) {\n      setShowPopup(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const renderTextWithClickableWords = () => {\n    if (!text) return null;\n    \n    const words = text.split(/(\\s+)/);\n    return words.map((word, index) => {\n      if (word.trim() === '') {\n        return <span key={index}>{word}</span>;\n      }\n      \n      return (\n        <span\n          key={index}\n          className=\"clickable-word\"\n          onClick={(e) => handleWordClick(word, e)}\n          title={`Click to analyze: ${word}`}\n        >\n          {word}\n        </span>\n      );\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>📚 Morpheme Highlighter</h1>\n        <p>Highlight any word or section to break it down or summarize.</p>\n      </div>\n      \n      <div className=\"content\">\n        <div className=\"text-input-section\">\n          <label htmlFor=\"text-input\" className=\"input-label\">\n            Paste or type your text here:\n          </label>\n          <div className=\"text-display\" ref={textAreaRef}>\n            {!isEditMode && text ? (\n              <pre className=\"clickable-text\">\n                {renderTextWithClickableWords()}\n              </pre>\n            ) : (\n              <textarea\n                id=\"text-input\"\n                className=\"text-input\"\n                placeholder=\"Paste or type your text here...&#10;&#10;Try highlighting a word to see its morphemes, or highlight a section for a summary.\"\n                value={text}\n                onChange={handleTextChange}\n              />\n            )}\n          </div>\n          \n          <div className=\"instructions\">\n            💡 Highlight a word to see its morphemes — or highlight a section to get a summary.\n          </div>\n          \n          <div className=\"button-group\">\n            {text && (\n              <>\n                <button \n                  className=\"mode-button\"\n                  onClick={() => setIsEditMode(!isEditMode)}\n                >\n                  {isEditMode ? '📖 View Clickable Text' : '✏️ Edit Text'}\n                </button>\n                <button \n                  className=\"clear-button\"\n                  onClick={() => {\n                    setText('');\n                    setAnalysis(null);\n                    setError(null);\n                    setShowPopup(false);\n                    setIsEditMode(true);\n                  }}\n                >\n                  Clear Text\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n\n        {showPopup && (\n          <div \n            className=\"analysis-popup\"\n            style={{\n              left: `${popupPosition.x}px`,\n              top: `${popupPosition.y}px`\n            }}\n          >\n            <div className=\"popup-header\">\n              <h3>Analysis: \"{selectedWord}\"</h3>\n              <button \n                className=\"close-button\"\n                onClick={() => setShowPopup(false)}\n              >\n                ×\n              </button>\n            </div>\n            \n            {loading && (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Analyzing word structure...</p>\n              </div>\n            )}\n            \n            {error && (\n              <div className=\"error\">\n                <p>{error}</p>\n              </div>\n            )}\n            \n            {analysis && !loading && (\n              <div className=\"analysis-content\">\n                <div className=\"morpheme-breakdown\">\n                  <h4>📚 Morpheme Breakdown:</h4>\n                  <div className=\"morphemes\">\n                    {analysis.prefix && (\n                      <div className=\"morpheme prefix\">\n                        <span className=\"part\">{analysis.prefix.part}</span>\n                        <span className=\"meaning\">{analysis.prefix.meaning}</span>\n                      </div>\n                    )}\n                    {analysis.root && (\n                      <div className=\"morpheme root\">\n                        <span className=\"part\">{analysis.root.part}</span>\n                        <span className=\"meaning\">{analysis.root.meaning}</span>\n                      </div>\n                    )}\n                    {analysis.suffix1 && (\n                      <div className=\"morpheme suffix\">\n                        <span className=\"part\">{analysis.suffix1.part}</span>\n                        <span className=\"meaning\">{analysis.suffix1.meaning}</span>\n                      </div>\n                    )}\n                    {analysis.suffix2 && (\n                      <div className=\"morpheme suffix\">\n                        <span className=\"part\">{analysis.suffix2.part}</span>\n                        <span className=\"meaning\">{analysis.suffix2.meaning}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {analysis.example && (\n                  <div className=\"example\">\n                    <h4>💡 Example Usage:</h4>\n                    <p>\"{analysis.example}\"</p>\n                  </div>\n                )}\n                \n                {analysis.related && analysis.related.length > 0 && (\n                  <div className=\"related-words\">\n                    <h4>🔗 Related Words:</h4>\n                    <div className=\"word-list\">\n                      {analysis.related.map((word, index) => (\n                        <span key={index} className=\"related-word\">{word}</span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MorphemeHighlighter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}